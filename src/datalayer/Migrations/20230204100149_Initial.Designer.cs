// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenPlzApi.DataLayer;

#nullable disable

namespace OpenPlzAPI.DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230204100149_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.District", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Code (Bezirkskodierung)");

                    b.Property<Guid>("FederalProvinceId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to federal province (Bundesland)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Bezirkskennziffer)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Bezirksname)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FederalProvinceId");

                    b.ToTable("Districts", "at", t =>
                        {
                            t.HasComment("Representation of an Austrian district (Politischer Bezirk)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.FederalProvince", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Bundeslandkennziffer)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Bundeslandname)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("FederalProvinces", "at", t =>
                        {
                            t.HasComment("Representation of an Austrian federal province (Bundesland)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Locality", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Ortschaftskennziffer)");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to municipality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Ortschaftsname)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Postal code (Postleitzahl)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("Key", "PostalCode", "MunicipalityId")
                        .IsUnique();

                    b.ToTable("Localities", "at", t =>
                        {
                            t.HasComment("Representation of an Austrian locality (Stadt, Ort)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Code (Gemeindecode)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to district (Bezirk)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Gemeindekennziffer)");

                    b.Property<bool>("MultiplePostalCodes")
                        .HasColumnType("boolean")
                        .HasComment("This municipality has multiple postal codes?");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Ortschaftsname)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasComment("Postal code (Postleitzahl des Gemeindeamtes)");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("Status (Gemeindestatus)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DistrictId");

                    b.ToTable("Municipalities", "at", t =>
                        {
                            t.HasComment("Representation of an Austrian municipality (Gemeinde)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Street", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Straßenkennziffer)");

                    b.Property<Guid>("LocalityId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to locality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Straßenname)");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.HasIndex("Key", "LocalityId")
                        .IsUnique();

                    b.ToTable("Streets", "at", t =>
                        {
                            t.HasComment("Representation of an Austrian street (Straße)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Canton", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Code (Kantonskürzel)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Kantonsnummer)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Kantonsname)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Cantons", "ch", t =>
                        {
                            t.HasComment("Representation of a Swiss canton (Kanton)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Commune", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to district (Bezirk)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Gemeindenummer)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Amtlicher Gemeindename)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Short name (Gemeindename, kurz)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Communes", "ch", t =>
                        {
                            t.HasComment("Representation of a Swiss commune (Gemeinde)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.District", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid>("CantonId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to canton (Kanton)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Bezirksnummer)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Bezirksname)");

                    b.HasKey("Id");

                    b.HasIndex("CantonId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Districts", "ch", t =>
                        {
                            t.HasComment("Representation of a Swiss district (Bezirk)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Locality", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid>("CommuneId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to commune (Gemeinde)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Ortsname)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Postal code (Postleitzahl)");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("PostalCode", "Name")
                        .IsUnique();

                    b.ToTable("Localities", "ch", t =>
                        {
                            t.HasComment("Representation of a Swiss locality (Ort oder Stadt)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Street", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Key (Straßenschlüssel)");

                    b.Property<Guid>("LocalityId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to locality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Straßenname)");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("Status (Straßenstatus)");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId")
                        .HasDatabaseName("IX_Streets_LocalityId1");

                    b.HasIndex("Key", "LocalityId")
                        .IsUnique()
                        .HasDatabaseName("IX_Streets_Key_LocalityId1");

                    b.ToTable("Streets", "ch", t =>
                        {
                            t.HasComment("Representation of a Swiss street (Straße)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.District", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("AdministrativeHeadquarters")
                        .HasColumnType("text")
                        .HasComment("Administrative headquarters (Sitz der Kreisverwaltung)");

                    b.Property<Guid>("FederalStateId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to federal state (Bundesland)");

                    b.Property<Guid?>("GovernmentRegionId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to government region (Regierungsbezirk)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Kreisname)");

                    b.Property<string>("RegionalKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Regional key (Regionalschlüssel)");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasComment("Type (Kreiskennzeichen)");

                    b.HasKey("Id");

                    b.HasIndex("FederalStateId");

                    b.HasIndex("GovernmentRegionId");

                    b.HasIndex("RegionalKey")
                        .IsUnique();

                    b.ToTable("Districts", "de", t =>
                        {
                            t.HasComment("Representation of a German district (Kreis)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.FederalState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Bundeslandname)");

                    b.Property<string>("RegionalKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Regional key (Regionalschlüssel)");

                    b.Property<string>("SeatOfGovernment")
                        .HasColumnType("text")
                        .HasComment("Seat of government (Sitz der Landesregierung)");

                    b.HasKey("Id");

                    b.HasIndex("RegionalKey")
                        .IsUnique();

                    b.ToTable("FederalStates", "de", t =>
                        {
                            t.HasComment("Representation of a German federal state (Bundesland)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.GovernmentRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("AdministrativeHeadquarters")
                        .HasColumnType("text")
                        .HasComment("Administrative headquarters (Verwaltungssitz des Regierungsbezirks)");

                    b.Property<Guid>("FederalStateId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to federal state (Bundesland)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Bezirksname)");

                    b.Property<string>("RegionalKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Regional key (Regionalschlüssel)");

                    b.HasKey("Id");

                    b.HasIndex("FederalStateId");

                    b.HasIndex("RegionalKey")
                        .IsUnique();

                    b.ToTable("GovernmentRegions", "de", t =>
                        {
                            t.HasComment("Representation of a German government region (Regierungsbezirk)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Locality", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid?>("MunicipalityId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to municipality (Gemeinde)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Ortsname)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Postal code (Postleitzahl)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId", "PostalCode", "Name")
                        .IsUnique();

                    b.ToTable("Localities", "de", t =>
                        {
                            t.HasComment("Representation of a German locality (Ort oder Stadt)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.MunicipalAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<string>("AdministrativeHeadquarters")
                        .HasColumnType("text")
                        .HasComment("Administrative headquarters (Verwaltungssitz des Gemeindeverbandes)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Code (Code des Gemeindeverbandes)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to district (Kreis)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Name des Gemeindeverbandes)");

                    b.Property<string>("RegionalKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Regional key (Regionalschlüssel)");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasComment("Type (Kennzeichen)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("RegionalKey", "Code")
                        .IsUnique();

                    b.ToTable("MunicipalAssociations", "de", t =>
                        {
                            t.HasComment("Representation of a German municipal association (Gemeindeverband)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid?>("AssociationId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to municipal association (Gemeindeverband)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to district (Kreis)");

                    b.Property<Guid>("FederalStateId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to federal state (Bundesland)");

                    b.Property<bool>("MultiplePostalCodes")
                        .HasColumnType("boolean")
                        .HasComment("Multiple postcodes available?");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Gemeindename)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Postal code of the administrative headquarters (Verwaltungssitz), if there are multiple postal codes available");

                    b.Property<string>("RegionalKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Regional key (Regionalschlüssel)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Short Name (Verkürzter Gemeindename)");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasComment("Type (Gemeindekennzeichen)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.HasIndex("DistrictId")
                        .HasDatabaseName("IX_Municipalities_DistrictId1");

                    b.HasIndex("FederalStateId");

                    b.HasIndex("RegionalKey")
                        .IsUnique();

                    b.ToTable("Municipalities", "de", t =>
                        {
                            t.HasComment("Representation of a German municipality (Gemeinde)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Street", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(0)
                        .HasComment("Unique Id");

                    b.Property<Guid>("LocalityId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to locality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name (Straßenname)");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId")
                        .HasDatabaseName("IX_Streets_LocalityId2");

                    b.HasIndex("Name", "LocalityId")
                        .IsUnique();

                    b.ToTable("Streets", "de", t =>
                        {
                            t.HasComment("Representation of a German street (Straße)");
                        });
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.District", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.AT.FederalProvince", "FederalProvince")
                        .WithMany()
                        .HasForeignKey("FederalProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FederalProvince");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Locality", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.AT.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Municipality", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.AT.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.AT.Street", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.AT.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Commune", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.CH.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.District", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.CH.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("CantonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Locality", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.CH.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.CH.Street", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.CH.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.District", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.FederalState", "FederalState")
                        .WithMany()
                        .HasForeignKey("FederalStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPlzApi.DataLayer.DE.GovernmentRegion", "GovernmentRegion")
                        .WithMany()
                        .HasForeignKey("GovernmentRegionId");

                    b.Navigation("FederalState");

                    b.Navigation("GovernmentRegion");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.GovernmentRegion", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.FederalState", "FederalState")
                        .WithMany()
                        .HasForeignKey("FederalStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FederalState");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Locality", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.MunicipalAssociation", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.Navigation("District");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Municipality", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.MunicipalAssociation", "Association")
                        .WithMany()
                        .HasForeignKey("AssociationId");

                    b.HasOne("OpenPlzApi.DataLayer.DE.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("OpenPlzApi.DataLayer.DE.FederalState", "FederalState")
                        .WithMany()
                        .HasForeignKey("FederalStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");

                    b.Navigation("District");

                    b.Navigation("FederalState");
                });

            modelBuilder.Entity("OpenPlzApi.DataLayer.DE.Street", b =>
                {
                    b.HasOne("OpenPlzApi.DataLayer.DE.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });
#pragma warning restore 612, 618
        }
    }
}
